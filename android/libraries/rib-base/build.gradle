/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    dependencies {
        classpath deps.build.gradlePlugins.apt
    }
}

apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: "org.jetbrains.kotlin.kapt"

sourceCompatibility = deps.build.javaVersion.toString()
targetCompatibility = deps.build.javaVersion.toString()

dependencies {
    // RIBs themselves don't need to use dagger. But the base library does use dagger
    // in order to invert a dependency. With a bit of work this could be removed.
    kapt deps.apt.daggerCompiler
    kapt deps.apt.androidApi

    compile deps.external.guavaAndroid
    compile deps.external.reactiveStreams
    compile deps.external.rxrelay2
    compile deps.external.rxjava2
    compile deps.uber.autodispose
    api deps.uber.autodisposeLifecycle
    compile deps.apt.javaxInject

    compileOnly deps.apt.daggerCompiler
    compileOnly deps.androidx.annotations
    compileOnly deps.apt.androidApi
    compileOnly deps.external.checkerQual

    testCompile deps.androidx.annotations
    testCompile deps.apt.androidApi
    testCompile deps.kotlin.stdlib
    testCompile deps.test.junit
    testCompile deps.test.mockito
    testCompile deps.test.mockitoKotlin
    testCompile deps.test.truth
    testCompile(project(":libraries:rib-test")) {
        transitive = false
    }
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
