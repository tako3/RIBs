/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath deps.build.gradlePlugins.android
        classpath deps.build.gradlePlugins.errorprone
        classpath deps.build.gradlePlugins.nullaway
    }
}

apply plugin: 'com.android.application'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'net.ltgt.nullaway'

android {
    compileSdkVersion deps.build.compileSdkVersion
    buildToolsVersion deps.build.buildToolsVersion

    defaultConfig {
        minSdkVersion deps.build.minSdkVersion
        targetSdkVersion deps.build.targetSdkVersion
        applicationId "com.uber.tutorial3"
        versionCode 1
        versionName "1.0"
    }
    compileOptions {
        sourceCompatibility deps.build.javaVersion
        targetCompatibility deps.build.javaVersion
    }

    // No need for lint. This is just a tutorial.
    lintOptions {
        abortOnError false
        quiet true
    }
}

dependencies {
    annotationProcessor deps.uber.autodisposeErrorProne
    annotationProcessor deps.apt.daggerCompiler
    annotationProcessor project(":libraries:rib-compiler-app")
    annotationProcessor project(":libraries:rib-compiler-test")
    annotationProcessor deps.apt.nullAway
    implementation project(":libraries:rib-android")
    implementation deps.external.dagger
    implementation deps.external.rxbinding
    implementation deps.external.leakcanaryDebug
    implementation deps.androidx.percent
    implementation deps.androidx.appcompat
    compileOnly deps.apt.javax
    testImplementation project(":libraries:rib-test")
    errorprone deps.build.errorProne
    errorprone deps.build.guavaJre
    errorproneJavac deps.build.errorProneJavac
    errorprone deps.build.nullAway
}

tasks.withType(JavaCompile).configureEach {
    // Disable error prone checks I don't want.
    options.errorprone {
        disable("ReferenceEquality", "ShortCircuitBoolean", "MissingCasesInEnumSwitch",
                "CheckReturnValue", "InvalidPatternSyntax", "OperatorPrecedence", "DefaultCharset")
    }
}
